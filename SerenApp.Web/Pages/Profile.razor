@page "/profile"
@attribute [Authorize(Roles = @Logic.AccountLogic.UserRole)]

@using SerenApp.Core.Interfaces
@using SerenApp.Core.Model

@inject IUserRepository Users
@inject AuthenticationStateProvider AuthenticationStateProvider

<h3>Profile</h3>

<p><span class="oi oi-phone"></span> Phone number: @user.PhoneNumber</p>

<p>
    <span class="oi oi-warning"></span> 
    @(string.IsNullOrEmpty(user.SecureContactPhoneNumber) ? "No emergency contact set" : @user.SecureContactPhoneNumber)
    <button class="btn btn-outline-primary" @onclick="() => toggleEditSecureContact = !toggleEditSecureContact" ><span class="oi oi-pencil"></span></button>
</p>

@if(toggleEditSecureContact)
{
    <div>New emergency contact phone number</div>
    <input class="form-control" type="text" placeholder="Phone" @bind="newPhone"/>
    <button class="btn btn-primary" @onclick="ChangePhoneNumber" disabled=@string.IsNullOrWhiteSpace(newPhone)>Change</button>
}

@if(!string.IsNullOrEmpty(status))
{
    <div class="alert alert-danger">@status</div>
}

@code {

    private User user;
    private string newPhone;
    private string status;
    private bool toggleEditSecureContact = false;

    private async void ChangePhoneNumber()
    {
        status = "";
        string parsed;

        try
        {
            parsed = Logic.AccountLogic.ParsePhoneNumber(newPhone);    
        }
        catch(Exception e)
        {
            status = e.Message;
            return;
        }

        user.SecureContactPhoneNumber = parsed;

        try
        {
            user = await Users.Update(user); 
        }
        catch(Exception e)
        {
            status = e.Message;
            return;
        }

        status = "successfully updated!";

    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            this.user = await Users.GetByPhoneNumber(user.Identity.Name);
        }
    }
}
