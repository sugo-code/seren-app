// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SerenApp.Infrastructure.DAL.EntityFrameworkCore;

#nullable disable

namespace SerenApp.Web.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220707072237_AddedDeviceReports")]
    partial class AddedDeviceReports
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SerenApp.Core.Model.Admin", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("SerenApp.Core.Model.Device", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirmwareVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("SerenApp.Core.Model.DeviceReport", b =>
                {
                    b.Property<DateTimeOffset>("ID")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("BatteryAvg")
                        .HasColumnType("float");

                    b.Property<double>("BloodOxygenAvg")
                        .HasColumnType("float");

                    b.Property<double>("BloodPressureAvg")
                        .HasColumnType("float");

                    b.Property<double>("BodyTemperatureAvg")
                        .HasColumnType("float");

                    b.Property<int>("HeartFrequencyAvg")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("DeviceReports");
                });

            modelBuilder.Entity("SerenApp.Core.Model.User", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecureContactPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SerenApp.Core.Model.Device", b =>
                {
                    b.HasOne("SerenApp.Core.Model.User", null)
                        .WithMany("Devices")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("SerenApp.Core.Model.User", b =>
                {
                    b.Navigation("Devices");
                });
#pragma warning restore 612, 618
        }
    }
}
